@model IEnumerable<Phones.Models.Phone>
@{
    ViewBag.Title = "Таблицы API";
    WebGrid grid = new WebGrid(Model);
}

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            save();
            changeMode();
            deleteClick();
        })

        function addErrors(jsObj, field, mode) {
            if (jsObj['ModelState'][field]) {
                $.each(jsObj['ModelState'][field], function (index, item) {
                    $('#' + mode + 'errors').append("<p>" + item + "</p>");
                });
            }
        };

        function save() {
            $("#saveAdd").click(function (event) {
                event.preventDefault();
                $.ajax("/api/phone/", {
                    type: "POST",
                    data: $("#addform").serialize(),
                    success: function () {
                        document.location.reload();
                    },
                    error: function (jxqr, error, status) {
                        var response = jxqr.responseJSON;
                        $('#adderrors').empty();
                        addErrors(response, 'phone.Name', 'add');
                        addErrors(response, 'phone.CompanyID', 'add');
                    }
                })
            });

            $("#saveEdit").click(function (event) {
                event.preventDefault();
                var id = $("#editID").val();
                $.ajax("/api/phone/" + id, {
                    type: 'PUT',
                    data: $("#editform").serialize(),
                    success: function () {
                        document.location.reload();
                    },
                    error: function (jxqr, error, status) {
                        var response = jxqr.responseJSON;
                        $('#editerrors').empty();
                        addErrors(response, 'phone.Name', 'edit');
                        addErrors(response, 'phone.CompanyID', 'edit');
                    }
                });
            })
        }

        function changeMode() {
            $("#addButton").click(function (event) {
                event.preventDefault();
                $('#adderrors').empty();
                $(".addInput").val("");
                $("#addButton").css('display', 'none');
                $(".display-mode").attr("disabled", true);
                $("#editform").css('display', 'none');
                $("#addform").css('display', 'block');
            });
            $(".display-on").click(function (event) {
                event.preventDefault();
                $("#addButton").css('display', 'block');
                $(".display-mode").attr("disabled", false);
                $("#addform").css('display', 'none');
                $("#editform").css('display', 'none');
            });
            $(".edit-on").click(function (event) {
                event.preventDefault();
                var id = $(this).attr('id');
                $.ajax("/api/phone/" + id, {
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        $('#editerrors').empty();
                        $("#editID").val(data.ID);
                        $("#editName").val(data.Name);
                        $("#editCompany").val(data.CompanyID);
                        $("#addButton").css('display', 'none');
                        $(".display-mode").attr("disabled", true);
                        $("#addform").css('display', 'none');
                        $("#editform").css('display', 'block');
                    }
                });
            })
        }

        function deleteClick() {
            $(".delete-btn").click(function (event) {
                var id = $(this).attr("id");
                $.ajax("/api/phone/" + id, {
                    type: 'DELETE',
                    success: function () {
                        location.reload();
                    }
                })
            })            
        }
    </script>
}

@grid.GetHtml("table",columns: grid.Columns(grid.Column("ID", "ID"),
                                    grid.Column("Name", "Наименование"),
                                    grid.Column("Company.Name",header: "Компания"),
                                    grid.Column(format: @<text><button id="@item.ID" class="btn btn-info btn-sm edit-on display-mode">Редактировать</button>
                                                               <button id="@item.ID" class="btn btn-danger btn-sm delete-btn display-mode">Удалить</button></text>)))


<div>
    <form id="addform">
        <p><div id="adderrors" style="color:red;"></div></p>
        <table class="table">
            <tr>
                <th></th>
                <th>@Html.LabelFor(p => p.First().Name)</th>
                <th>@Html.LabelFor(p => p.First().CompanyID)</th>
                <th></th>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="addName" class="addInput" name="Name" />
                </td>
                <td>@Html.DropDownList("CompanyID", null, "Выберите компанию", new { @id = "addCompany", @class = "addInput" })</td>
                <td></td>
            </tr>
        </table>
        <button id="saveAdd" class="btn btn-primary btn-sm">Сохранить</button>
        <button class="btn btn-danger btn-sm display-on">Отмена</button>
    </form>

    <form id="editform">
        <p><div id="editerrors" style="color:red;"></div></p>
        <table class="table">
            <tr>
                <th></th>
                <th>@Html.LabelFor(p => p.First().Name)</th>
                <th>@Html.LabelFor(p => p.First().CompanyID)</th>
            </tr>
            <tr>
                <td><input id="editID" name="ID" type="hidden" readonly /></td>
                <td>
                    <input id="editName" name="Name" required />
                </td>
                <td>@Html.DropDownList("CompanyID",null,new { @id = "editCompany" })</td>
            </tr>
        </table>
        <button class="btn btn-primary btn-sm" id="saveEdit">Сохранить</button>
        <button class="btn btn-danger btn-sm display-on">Отмена</button>
    </form>
</div>

<button class="btn btn-default display-mode" id="addButton">Добавить</button>